C51 COMPILER V9.60.7.0   PASSWORD                                                          03/08/2023 20:57:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PASSWORD
OBJECT MODULE PLACED IN .\Objects\password.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE password.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -password.lst) TABS(2) OBJECT(.\Objects\password.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          code unsigned char display_msg1[]=" Enter Password ";           //Display msg on 1st line of lcd
   5          code unsigned char display_msg2[]="Correct Password";           //Display msg on 2nd line of lcd
   6          code unsigned char display_msg3[]=" Access Granted ";
   7          code unsigned char display_msg4[]=" Wrong Password ";           //Display msg on 2nd line of lcd
   8          code unsigned char display_msg5[]=" Access Denied  ";
   9          
  10          code unsigned char pswd[8] = "15A8*D6#";
  11          unsigned char entry[8];
  12          code unsigned char lookuptable[4][4] = {
  13          {'1','2','3','A'},
  14          {'4','5','6','B'},
  15          {'7','8','9','C'},
  16          {'*','0','#','D'}
  17          };
  18          int i,m; 
  19          int j=0;
  20          int k=0;
  21          int l=1;
  22          unsigned char a, b, inp;
  23          int row, column;
  24          int incorrect=0;
  25          unsigned char key[8];
  26          
  27          void main()
  28          {
  29   1        lcd_init();
  30   1        lcd_cmd(0x80);
  31   1        msdelay(4);
  32   1        lcd_write_string(display_msg1);
  33   1        lcd_cmd(0xC0);
  34   1        msdelay(4);
  35   1      
  36   1        for(i=0;i<8; i++)
  37   1        { 
  38   2          j=0;
  39   2          k=0;
  40   2          l=1;
  41   2          P3 = 0x0F;
  42   2          while(k==0)
  43   2          {  
  44   3            while(j==0)
  45   3            {
  46   4              P3 = 0x0F;
  47   4              a = P3 & 0x0F;  
  48   4              if(a == 0x0F){j = 1;}  //if columns are high then no key pressed so get out of loop
  49   4            }
  50   3      
  51   3            while(l==1)
  52   3            {
  53   4              P3 = 0x0F;
  54   4              a = P3 & 0x0F;
C51 COMPILER V9.60.7.0   PASSWORD                                                          03/08/2023 20:57:10 PAGE 2   

  55   4              if(a != 0x0F){l=0;} // if columns are high then no key pressed so check again
  56   4            }
  57   3      
  58   3            msdelay(20); //debounce
  59   3            P3 = 0x0F;
  60   3            a = P3 & 0x0F;
  61   3            if(a != 0x0F){k=1;} //if columns are high then check again
  62   3          }
  63   2          P3 = 0x0F;
  64   2          a = P3;
  65   2          P3 = 0xF0;
  66   2          b = P3;
  67   2          if(a == 0x07){column = 0;}
  68   2          if(a == 0x0B){column = 1;}
  69   2          if(a == 0x0D){column = 2;}
  70   2          if(a == 0x0E){column = 3;}
  71   2          if(b == 0x70){row = 3;}
  72   2          if(b == 0xB0){row = 2;}
  73   2          if(b == 0xD0){row = 1;}
  74   2          if(b == 0xE0){row = 0;}
  75   2          inp = lookuptable[row][column];
  76   2          key[i] = inp;
  77   2          lcd_write_char(inp);
  78   2        }
  79   1        lcd_cmd(0x01);
  80   1        for(m=0; m<8; m++)
  81   1        {if(key[m] != pswd[m]){incorrect=1;}}
  82   1        if(incorrect==1)
  83   1          {
  84   2            lcd_cmd(0x80);
  85   2            msdelay(4);
  86   2            lcd_write_string(display_msg4);
  87   2            lcd_cmd(0xC0);
  88   2            msdelay(4);
  89   2            lcd_write_string(display_msg5);
  90   2          }
  91   1        if(incorrect==0)
  92   1          {
  93   2            lcd_cmd(0x80);
  94   2            msdelay(4);
  95   2            lcd_write_string(display_msg2);
  96   2            lcd_cmd(0xC0);
  97   2            msdelay(4);
  98   2            lcd_write_string(display_msg3);
  99   2          }
 100   1          while(1);
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    601    ----
   CONSTANT SIZE    =    109    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
